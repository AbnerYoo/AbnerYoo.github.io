{"pages":[],"posts":[{"title":"aria2选项说明--基础选项","text":"以下均根据官方文档及相关翻译整合和梳理 基础选项1-d, --dir=&lt;DIR&gt; 保存下载文件的路径 1-i, --input-file=&lt;FILE&gt; 文件中列出的下载地址。你可以通过在一行上，用TAB分隔多个下载地址，来为一个下载对象指定多源下载。另外，可以在每个源地址后指定选项。 选项行必须以一个或多个空白符（空格或TAB）开头，并且每行只含一个选项置。文件可以使用GZIP压缩. 当文件以-指定, aria2将会从标准输入（stdin）读取。详细信息详见“输入文件（Input File）”章节。 另请参见 --deferred-input 选项。 另请参见 --save-session 选项。 1-l, --log=&lt;LOG&gt; 日志文件的文件名。 如果被指定为 - ，日志将以标准输出（stdout）。如果指定为空字符串（“”），或者省略该选项，日志不会写入到磁盘上。 1-j, --max-concurrent-downloads=&lt;N&gt; 设置每个队列并行下载的最大数量。另请参见 --split option。 默认: 5 --max-concurrent-downloads 限制同时下载的项目数量。 --split 和 --min-split-size 影响每个项目内部的连接数量。 假设你有这样一个输入文件（参见--input-file option）: http://example.com/foohttp://example.com/bar 这里有两个下载项目。如果配置--max-concurrent-downloads值被设置大于或等于2，aria2能同时下载这些项目。在每个下载项目，你能通过--split 或者 --min-split-size 等来设置连接数。 1-V, --check-integrity [true|false] 通过验证块或完整文件的哈希值来检查文件的完整性。该选项仅对 BitTorrent、带校验和的 Metalink 和（启用 --checksum 选项时）HTTP(S)/FTP 下载有效。如提供的是文件块的校验和，在下载时就可自动校验并重试损坏的部分。换成整文件，就必须等到下载完成才能校验。这取决于文件长度。如果校验失败，文件将被重新下载。如果同时提供了按块的校验值和全文件校验值，那么只会使用块哈希。默认：false 1-c, --continue [true|false] 继续下载一个仅部分完成的文件。使用这个选项来继续下载一个由浏览器或其他程序从开头单线程下载的文件。目前这个选项仅能用于 http(s)/ftp 下载。 1-h, --help[=&lt;TAG&gt;|&lt;KEYWORD&gt;] 帮助信息按照以“#”开头的标签分类。例如，输入--help=#http会得到带#http标签的各选项的用法。如果指定了非标签的词，那么打印名字含这个词的各选项的用法。可用的值有：#basic, #advanced, #http, #https, #ftp, #metalink, #bittorrent, #cookie, #hook, #file, #rpc, #checksum, #experimental, #deprecated, #help, #all。默认：#basic 相关链接 aria2官方文档 aria2指令说明翻译（中文）","link":"/2019/aria2-options-1-basic-option/"},{"title":"aria2选项说明--HTTP/FTP/SFTP选项","text":"以下均根据官方文档及相关翻译整合和梳理 HTTP/FTP/SFTP选项1--all-proxy=&lt;PROXY&gt; 为所有协议的传输使用代理服务器。用 “”（空字串）来覆盖之前定义的代理。您可以使用 --http-proxy，--https-proxy 和 --ftp-proxy 选项为某个协议指定代理服务器。该选项对所有下载有效。代理地址格式[http://][USER:PASSWORD@]HOST[:PORT]。另请参见： 环境（ENVIRONMENT）章节。 如果用户名和密码被内置在了代理地址中，并且还通过–{http,https,ftp,all}-proxy-{user,passwd}选项来指定，这些之后被指定的选项覆盖之前的选项。例如，如果你在aria2.conf配置文件中指定http-proxy-user=myname, http-proxy-passwd=mypass并且在命令行也指定--http-proxy=&quot;http://proxy&quot;， 然后你会得到HTTP代理设置http://proxy带上用户名myname和密码mypass。 另一个例子，如果你在命令行指定--http-proxy=&quot;http://user:pass@proxy&quot; --http-proxy-user=&quot;myname&quot; --http-proxy-passwd=&quot;mypass&quot;，然后你会得到HTTP代理设置http://proxy带上用户名myname和密码mypass。 再一个例子，如果你在命令行指定--http-proxy-user=&quot;myname&quot; --http-proxy-passwd=&quot;mypass&quot; --http-proxy=&quot;http://user:pass@proxy&quot;，然后你会得到HTTP代理设置http://proxy带上用户名user和密码pass。 1--all-proxy-passwd=&lt;PASSWD&gt; 为 --all-proxy 指定密码。 1--all-proxy-user=&lt;USER&gt; 为 --all-proxy 指定用户。 1--checksum=&lt;TYPE&gt;=&lt;DIGEST&gt; 设置校验和。TYPE是哈希类型。可被支持的哈希类型列在aria2c -v的Hash Algorithms。DIGEST是十六进制摘要。例如，像这样设置sha-1十六进制：sha-1=0192ba11326fe2298c8cb4de616f4d4140213838。这个选项只会被应用到HTTP(S)/FTP下载。 1--connect-timeout=&lt;SEC&gt; 设置连接 HTTP/FTP/代理服务器的超时（以秒计）。在连接建立之后，此选项将失效，并以 –timeout 选项替代。默认：==60==。 1--dry-run [true|false] 如果填 true，aria2 仅检查远端文件是否可用而不下载数据。此选项对 HTTP/FTP 下载有效。如果启用，BitTorrent 下载会取消。默认：==false==。 1--lowest-speed-limit=&lt;SPEED&gt; 如果下载速度低于或等于此值（字节/秒），则断开连接。0意味着 aria2 没有最低速度限制。可附加 K 或 M（1K=1024，1M=1024K）。此选项对 BitTorrent 下载无效。默认：==0==。 1-x, --max-connection-per-server=&lt;NUM&gt; 每个下载对单个服务器的最大连接数。默认：==1==。 1--max-file-not-found=&lt;NUM&gt; 如果 aria2 从远端 HTTP/FTP 服务器收到了 NUM 次“文件未找到”状态，且没有得到任何数据，就认为此下载失败。指定 0 来禁用此选项。此选项仅适用于 HTTP/FTP 服务器。重试次数计入--max-tries，所以也应该设置这个选项。默认：==0==。 1-m, --max-tries=&lt;N&gt; 设置重试次数。0 表示不限次数。默认：==5==。 1-k, --min-split-size=&lt;SIZE&gt; aria2 不分割小于 2 * SIZE 字节范围的文件。例如，让我们考虑下载 20MiB 的文件，如果 SIZE 为10M，aria2 可以将文件拆分为2个[0-10MiB]和[10MiB-20MiB]的文件，并使用 2 个源（如果 –split&gt;=2）下载它。如果 SIZE 为 15M，由于 2 * 15M&gt;20MiB，aria2 不会拆分文件并使用 1 个源下载。你可以追加 K 或 M（1K = 1024，1M = 1024K）。可能的值: 1M -1024M。默认: ==20M==。 1--netrc-path=&lt;FILE&gt; 指定 netrc 文件的路径。默认：==$(HOME)/.netrc== netrc 文件的权限必须设置为600.否则，该文件会被忽略。 1-n, --no-netrc [true|false] 禁用 netrc 支持。默认启用。 只有--no-netrc设置为false时，netrc 文件在启动时被读取。所有如果--no-netrc在启动时设置为true，则整个会话期间没有netrc可用。即使使用aria2.changeGlobalOption()来设置--no-netrc=false，也不能启用netrc。 1--no-proxy=&lt;DOMAINS&gt; 指定不应使用代理的主机名、域名或（含或不含CIDR 块的）网络地址列表，以半角逗号 “,”分隔。 对于带有子网掩码的网络地址，IPv4和IPv6地址均起作用。当前实现无法解析URI的主机名来与--no-proxy指定的网络地址做比较。所以仅当URI具有数字IP地址时才有效。 1-o, --out=&lt;FILE&gt; 文件保存名字。此文件将以此名字永久保存在 --dir参数所指定的相对路径下。当 --force-sequential 参数被启用时，此选项被忽略。 不能给 Metalink 或 BitTorrent 下载指定文件名。该选项指定的文件名仅适用于直接使用命令行给 aria2 提供URI地址，而使用--input-file, --force-sequential选项时不生效。 示例： 1&gt;$ aria2c -o myfile.zip &quot;http://mirror1/file.zip&quot; &quot;http://mirror2/file.zip&quot; 1--proxy-method=&lt;METHOD&gt; 设置代理请求方式。请求方式是get或者tunnel。无论该选项如何配置，HTTPS下载始终使用tunnel。默认：==get==。 1-R, --remote-time [true|false] 从 HTTP/FTP 服务器获取远程文件的时间戳，确定其可用时将其应用到本地文件。默认：==false==。 1--reuse-uri [true|false] 如果未使用的 URI 已用完，复用已用过的。默认：==true==。 1--retry-wait=&lt;SEC&gt; 设定重试等待时间。秒数 &gt; 0 时，如果 HTTP 返回 503 错误，aria2 会在 &lt;秒数&gt; 秒后重试下载。默认：==0==。 1--server-stat-of=&lt;FILE&gt; 指定保存的服务器性能配置文件的名称。也可以使用 --server-stat-if 选项加载保存的数据。有关文件格式，参见服务器性能配置文件(Server Performance Profile)。 1--server-stat-if=&lt;FILE&gt; 指定要加载的服务器的性能配置文件的名称。加载的数据将被用在某些 URI 选择器之中，如feedback。参见 --uri-selector 选项。有关文件格式，参见服务器性能配置文件(Server Performance Profile)。 1--server-stat-timeout=&lt;SEC&gt; 指定从上次连接服务器起，弃用性能档案文件的超时（以秒计）。默认：==86400 （24小时）==。 1-s, --split=&lt;N&gt; 使用 N 个连接下载文件。如 N 小于需要下载的 URI 数量，那么将使用所有连接，剩余的 URL 将作为候补。如 N 大于需要下载的 URI 数量，多余的 URL 将用于并行下载。到主机的连接数量受 --max-connection-per-server 选项限制。参见 --min-split-size 选项。默认：==5== 一些 Metalinks 规定连接服务器的数量。aria2 严格遵守。这意味着如果 Metalink 定义的最大连接数小于N，那么 aria2 使用这个最大连接数代替N。 1--stream-piece-selector=&lt;SELECTOR&gt; 指定在 HTTP/FTP 下载中使用的块选择算法。块指的是在并行分块下载中固定长度的分段。如果给定default，aria2选择分块以减少建立连接的数量。 这是个合理的默认行为，因为建立连接是一个昂贵的操作。 如果给定inorder，aria2会选择最小索引的块。索引等于0表示文件的第一个块。 这会在边下边播的场景中十分有用。 --enable-http-pipelining选项有可能有助于减少重新连接的开销。请注意aria2生效了--min-split-size选项，因此对--min-split-size选项有必要指定个合理的值。 如果给定random，aria2将会随机选择块。 像inorder一样，--min-split-size选项也是可以被生效的。如果给定geom，一开始 aria2 像inorder一样选择索引最小的块，但是它会成倍地增加与前一个被选中块之间的空间。这将会减少建立连接的数量，同时还会先下载文件的开头部分。这会在边下边播的场景中十分有用。默认：==default==。 1-t, --timeout=&lt;SEC&gt; 设置超时（以秒计）。默认：==60==。 1--uri-selector=&lt;SELECTOR&gt; 指定 URI 选择算法。可能的值有inorder、 feedback 和 adaptive。如果指定inorder，将以 URI 列表中显示的顺序尝试 URI。如果指定feedback，aria2 将根据先前下载中监测到的下载速度并选择 URI 列表中最快的服务器。此选项也可以有效地跳过死镜像。监测到的下载速度是 --server-stat-of 和 --server-stat-if 选项中提到的服务器性能档案文件的一部分。如果指定adaptive，则从第一个和保留的连接选择最好的镜像。对于附加的连接，将返回未经测试的镜像，并且如果如果它们中的每一个都经过了测试，则返回需要再次测试的镜像。否则，不再选择镜像。如同feedback，此配置使用服务器的性能档案文件。默认：==feedback== 相关链接 aria2官方文档 aria2指令说明翻译（中文）","link":"/2019/aria2-options-2-http-ftp-sftp-option/"}],"tags":[{"name":"aria2","slug":"aria2","link":"/tags/aria2/"},{"name":"aria2选项","slug":"aria2选项","link":"/tags/aria2%E9%80%89%E9%A1%B9/"},{"name":"aria2配置","slug":"aria2配置","link":"/tags/aria2%E9%85%8D%E7%BD%AE/"}],"categories":[{"name":"aria2","slug":"aria2","link":"/categories/aria2/"},{"name":"配置说明","slug":"aria2/配置说明","link":"/categories/aria2/%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"}]}